/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.vitaqresc.vistas;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.mycompany.vitaqresc.controladores.RestManager;
import com.mycompany.vitaqresc.models.ListaCitasPaciente;
import com.mycompany.vitaqresc.models.ListaPacientes;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gebel
 */
public class historialCitas extends javax.swing.JFrame {

    /**
     * Creates new form historialCitas
     */
    static int indicePaciente = 0;
    public ListaPacientes listaPaciente;

    public historialCitas() {
        initComponents();
    }

    public JTable getjTable1() {
        return jTable1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Historial citas m√©dicas");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre completo", "Edad", "Fecha de la cita", "Hora de la cita", "Motivo de la cita"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(240, 240, 240))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private int calcularEdadActual(Date fechaNacimiento, Date fechaActual) {
        DateFormat formatter = new SimpleDateFormat("yyyyMMdd");
        int d1 = Integer.parseInt(formatter.format(fechaNacimiento));
        int d2 = Integer.parseInt(formatter.format(fechaActual));
        /*retornamos la diferencia entre edades*/
        return (d2 - d1) / 10000;
    }

    public void cargarHistorialCitas(String idPrim) {
        try {
            ObjectMapper objectMapper = new ObjectMapper();
            SimpleDateFormat convertirJsonFecha = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");

            String jsonHistorialCitasPaciente = RestManager.getInstance().obtenerHistorialCitasPaciente(idPrim);
            ListaCitasPaciente listaCitas = objectMapper.readValue(jsonHistorialCitasPaciente, ListaCitasPaciente.class);
            DefaultTableModel c1=(DefaultTableModel) jTable1.getModel();
            String nombreCompleto = listaPaciente.getListaPacientesJava().get(indicePaciente).getNombres() + listaPaciente.getListaPacientesJava().get(indicePaciente).getApellidos();
            
            int edad = calcularEdadActual(
                    convertirJsonFecha.parse(listaPaciente.getListaPacientesJava().get(indicePaciente).getFechaNac()),
                    Date.from(Instant.now())
            );

            for (int i = 0; i < listaCitas.getHistorialCitasMedicas().size(); i++) {
                Date fechaYHoraCitaEnGeneral=convertirJsonFecha.parse(listaCitas.getHistorialCitasMedicas().get(i).getFechahoracita());
                System.out.println(fechaYHoraCitaEnGeneral.toString());
                String soloLaFecha=new SimpleDateFormat("dd/MM/yyyy").format(fechaYHoraCitaEnGeneral);
                String soloLaHora=new SimpleDateFormat("HH:mm").format(fechaYHoraCitaEnGeneral);
                c1.addRow(new Object[]{
                    nombreCompleto,
                    edad,
                    soloLaFecha,
                    soloLaHora,
                    listaCitas.getHistorialCitasMedicas().get(i).getMotivocita()
                });
                jTable1.setModel(c1);
            }
        } catch (IOException ex) {
            Logger.getLogger(historialCitas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(historialCitas.class.getName()).log(Level.SEVERE, null, ex);
        }
        indicePaciente=0;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(historialCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(historialCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(historialCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(historialCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new historialCitas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
